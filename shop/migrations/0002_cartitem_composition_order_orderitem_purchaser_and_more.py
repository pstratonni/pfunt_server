# Generated by Django 4.0 on 2023-03-21 10:22

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('shop', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('discount', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
        ),
        migrations.CreateModel(
            name='Composition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('total_amount', models.ImageField(default=0, upload_to='', validators=[django.core.validators.MinValueValidator(0)])),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_shipping', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('UNF', 'angenommen'), ('CON', 'best√§tigt'), ('COL', 'gesammelt'), ('SHI', 'verschickt')], default='UNF', max_length=3)),
                ('payment_type', models.CharField(choices=[('PP', 'PayPal'), ('BG', 'Bar')], default='BG', max_length=2)),
                ('payment_status', models.CharField(choices=[('PAI', 'bezahlt'), ('UNP', 'unbezahlt')], default='UNP', max_length=3)),
                ('address_city', models.CharField(max_length=20)),
                ('address_ZIP', models.CharField(max_length=5)),
                ('address_street', models.CharField(max_length=50)),
                ('address_home_number', models.CharField(max_length=5)),
                ('address_last_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('oder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='shop.order')),
            ],
        ),
        migrations.CreateModel(
            name='Purchaser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_city', models.CharField(max_length=20, null=True)),
                ('address_ZIP', models.CharField(max_length=5, null=True)),
                ('address_street', models.CharField(max_length=50, null=True)),
                ('address_home_number', models.CharField(max_length=5, null=True)),
                ('address_last_name', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='oderline',
            name='oder',
        ),
        migrations.RemoveField(
            model_name='oderline',
            name='product',
        ),
        migrations.AddField(
            model_name='cart',
            name='ip',
            field=models.CharField(max_length=20, null=True),
        ),
        migrations.RemoveField(
            model_name='product',
            name='composition',
        ),
        migrations.DeleteModel(
            name='CartLine',
        ),
        migrations.DeleteModel(
            name='Oder',
        ),
        migrations.DeleteModel(
            name='OderLine',
        ),
        migrations.AddField(
            model_name='purchaser',
            name='favorite_product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.product'),
        ),
        migrations.AddField(
            model_name='purchaser',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.user'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='product',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.product'),
        ),
        migrations.AddField(
            model_name='order',
            name='purchaser',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='shop.purchaser'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='cart',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='shop.cart'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product'),
        ),
        migrations.AddField(
            model_name='cart',
            name='purchaser',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart', to='shop.purchaser'),
        ),
        migrations.AddField(
            model_name='product',
            name='composition',
            field=models.ManyToManyField(related_name='product', to='shop.Composition'),
        ),
    ]
